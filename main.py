import os
import time
import random
from datetime import datetime
from instagrapi import Client
from instagrapi.exceptions import LoginRequired, ClientError
import requests
import logging

# ุฅุนุฏุงุฏุงุช ุงูุจูุช
ADMIN_USERNAME = "messaoudi__khalil"
BOT_USERNAME = "adhkar122025"
BOT_PASSWORD = "kham2007"

# ููุงุฆู ุงูุฃุฐูุงุฑ
MORNING_ADHKAR = [
    "ุฃุตุจุญูุง ูุฃุตุจุญ ุงูููู ูููุ ูุงูุญูุฏ ูููุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ.",
    "ุงูููู ุจู ุฃุตุจุญูุงุ ูุจู ุฃูุณููุงุ ูุจู ูุญูุงุ ูุจู ูููุชุ ูุฅููู ุงููุดูุฑ.",
    "ุณุจุญุงู ุงููู ูุจุญูุฏู ุนุฏุฏ ุฎููู ูุฑุถุง ููุณู ูุฒูุฉ ุนุฑุดู ููุฏุงุฏ ูููุงุชู."
]

EVENING_ADHKAR = [
    "ุฃูุณููุง ูุฃูุณู ุงูููู ูููุ ูุงูุญูุฏ ูููุ ูุง ุฅูู ุฅูุง ุงููู ูุญุฏู ูุง ุดุฑูู ููุ ูู ุงูููู ููู ุงูุญูุฏ ููู ุนูู ูู ุดูุก ูุฏูุฑ.",
    "ุงูููู ุจู ุฃูุณููุงุ ูุจู ุฃุตุจุญูุงุ ูุจู ูุญูุงุ ูุจู ูููุชุ ูุฅููู ุงููุตูุฑ.",
    "ุฃุนูุฐ ุจูููุงุช ุงููู ุงูุชุงูุงุช ูู ุดุฑ ูุง ุฎูู."
]

NIGHT_ADHKAR = [
    "ุจุงุณู ุงููู ุงูุฐู ูุง ูุถุฑ ูุน ุงุณูู ุดูุก ูู ุงูุฃุฑุถ ููุง ูู ุงูุณูุงุก ููู ุงูุณููุน ุงูุนููู.",
    "ุขูุฉ ุงููุฑุณู: ุงููู ูุง ุฅูู ุฅูุง ูู ุงูุญู ุงููููู...",
    "ุฃุนูุฐ ุจุฑุจ ุงููููุ ูู ุดุฑ ูุง ุฎูู."
]

# ูุชุบูุฑุงุช ุงูุชุชุจุน
follow_requests = []
active_users = []
followed_back = []
processed_messages = set()  # ูุชุฌูุจ ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ุงููุฏููุฉ
last_message_times = {}  # ูุชุฌูุจ ุงูุชูุฑุงุฑ

# ุฅุนุฏุงุฏ ุงูุชุณุฌูู
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot_logs.log'),
        logging.StreamHandler()
    ]
)

def get_algeria_time():
    """ุงูุญุตูู ุนูู ุชูููุช ุงูุฌุฒุงุฆุฑ (UTC+1)"""
    try:
        return (datetime.utcnow().hour + 1) % 24
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุงูุญุตูู ุนูู ุงูููุช: {e}")
        return datetime.now().hour

def send_direct_message(client, user_id, message):
    """ุฅุฑุณุงู ุฑุณุงูุฉ ูุจุงุดุฑุฉ ูุน ุงูุชุญูู ูู ุงูุชูุฑุงุฑ"""
    try:
        if not user_id or not message:
            return False
            
        # ุงูุชุญูู ูู ุนุฏู ุชูุฑุงุฑ ุงูุฑุณุงูุฉ ูุคุฎุฑุงู
        now = time.time()
        last_sent = last_message_times.get(user_id, 0)
        if now - last_sent < 30:  # 30 ุซุงููุฉ ุจูู ุงูุฑุณุงุฆู
            return False
            
        client.direct_send(text=message, user_ids=[user_id])
        last_message_times[user_id] = now
        logging.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุฅูู {user_id}")
        return True
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ: {e}")
        return False

def handle_new_follower(client, user_id, username):
    """ุฅุฏุงุฑุฉ ุงููุชุงุจุนูู ุงูุฌุฏุฏ"""
    if not user_id or not username:
        return False
        
    try:
        # ุงูุชุญูู ูู ุนุฏู ุฅุฑุณุงู ุงูุทูุจ ูุณุจูุงู
        for req in follow_requests:
            if req['user_id'] == user_id:
                return True
                
        message = f"๐ฌ ุทูุจ ูุชุงุจุนุฉ ุฌุฏูุฏ ูู: @{username}\n\n"
        message += "๐ ููููุงููุฉ ุนูู ุงููุชุงุจุนุฉุ ุงุฑุฏุฏ:\n"
        message += f"ูุจูู {username}"
        
        admin_id = client.user_id_from_username(ADMIN_USERNAME)
        if send_direct_message(client, admin_id, message):
            follow_requests.append({
                "user_id": user_id,
                "username": username,
                "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            })
            return True
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงููุชุงุจุน ุงูุฌุฏูุฏ: {e}")
    return False

def follow_user(client, username):
    """ูุชุงุจุนุฉ ูุณุชุฎุฏู ูุน ุงูุชุญูู ูู ุงููุชุงุจุนุฉ ุงูุณุงุจูุฉ"""
    try:
        if not username:
            return False
            
        # ุงูุชุญูู ูู ุงููุชุงุจุนุฉ ุงูุณุงุจูุฉ
        if username in followed_back:
            return True
            
        user_id = client.user_id_from_username(username)
        if not user_id:
            return False
            
        client.user_follow(user_id)
        followed_back.append(username)
        logging.info(f"ุชู ูุชุงุจุนุฉ ุงููุณุชุฎุฏู: @{username}")
        return True
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุชุงุจุนุฉ ุงููุณุชุฎุฏู: {e}")
        return False

def get_short_quran_audio():
    """ุงูุญุตูู ุนูู ููุทุน ูุฑุขู ูุตูุฑ"""
    try:
        # ูุตุฏุฑ ุจุฏูู ุฅุฐุง ูู ูุนูู ุงูุฃูู
        return "https://server.mp3quran.net/s_gmd/001.mp3"  # ุณูุฑุฉ ุงููุงุชุญุฉ
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุฌูุจ ุงูุชูุงูุฉ: {e}")
        return None

def process_new_messages(client):
    """ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ุงูุฌุฏูุฏุฉ ููุท"""
    try:
        threads = client.direct_threads(amount=10)  # ุงูุญุฏ ูู ุนุฏุฏ ุงููุญุงุฏุซุงุช
        if not threads:
            return
            
        for thread in threads:
            if not hasattr(thread, 'messages') or not thread.messages:
                continue
                
            for item in thread.messages:
                # ุงูุชุญูู ูู ุงูุฑุณุงุฆู ุงูุฌุฏูุฏุฉ ููุท
                if not hasattr(item, 'id') or item.id in processed_messages:
                    continue
                    
                if not hasattr(item, 'text') or not item.text:
                    processed_messages.add(item.id)
                    continue
                    
                message = item.text.strip()
                user_id = item.user_id
                thread_id = thread.id
                processed_messages.add(item.id)
                
                if not message:
                    continue
                    
                try:
                    if message.startswith("/start"):
                        if user_id not in active_users:
                            active_users.append(user_id)
                            send_direct_message(client, user_id,
                                "โจ ุชู ุชูุนูู ุงูุจูุช ุจูุฌุงุญ!\n\n"
                                "ุณูู ุชุตูู ุงูุฃุฐูุงุฑ ุงูููููุฉ ุชููุงุฆูุงู:\n"
                                "- ุฃุฐูุงุฑ ุงูุตุจุงุญ (6-9 ุต)\n"
                                "- ุฃุฐูุงุฑ ุงููุณุงุก (6-9 ู)\n"
                                "- ุฃุฐูุงุฑ ุงูููู (9-11 ู)\n\n"
                                "ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:\n"
                                "/quran - ุชูุงูุฉ ูุฑุขููุฉ ูุตูุฑุฉ\n"
                                "/ุญุฐู - ุฅุฎูุงุก ูุฐู ุงููุญุงุฏุซุฉ\n"
                                "/request - ุนุฑุถ ุทูุจุงุช ุงููุชุงุจุนุฉ (ููุฃุฏูู)")
                    
                    elif message.startswith("/quran"):
                        audio_url = get_short_quran_audio()
                        if audio_url:
                            send_direct_message(client, user_id,
                                "๐ง ุชูุงูุฉ ูุฑุขููุฉ ูุตูุฑุฉ (ุณูุฑุฉ ุงููุงุชุญุฉ):\n\n"
                                f"{audio_url}\n\n"
                                "ุงุถุบุท ุนูู ุงูุฑุงุจุท ููุงุณุชูุงุน")
                    
                    elif message.startswith("/request"):
                        if str(user_id) == str(client.user_id_from_username(ADMIN_USERNAME)):
                            if follow_requests:
                                requests_list = "\n".join(
                                    [f"{idx+1}. @{req['username']} ({req['timestamp']})"
                                     for idx, req in enumerate(follow_requests)])
                                send_direct_message(client, user_id,
                                    "๐ ุทูุจุงุช ุงููุชุงุจุนุฉ:\n\n" + requests_list)
                            else:
                                send_direct_message(client, user_id,
                                    "ูุง ุชูุฌุฏ ุทูุจุงุช ูุชุงุจุนุฉ ุฌุฏูุฏุฉ")
                    
                    elif message.startswith("ูุจูู ") and str(user_id) == str(client.user_id_from_username(ADMIN_USERNAME)):
                        parts = message.split()
                        if len(parts) >= 2:
                            username = parts[1].replace("@", "")
                            if follow_user(client, username):
                                send_direct_message(client, user_id,
                                    f"ุชู ูุจูู ูุชุงุจุนุฉ @{username}")
                    
                    elif message.startswith("/ุญุฐู"):
                        try:
                            client.direct_thread_hide(thread_id)
                            send_direct_message(client, user_id,
                                "โ ุชู ุฅุฎูุงุก ุงููุญุงุฏุซุฉ ุจูุฌุงุญ\n"
                                "ูุฅุนุงุฏุฉ ุงูุชุดุบููุ ุงูุชุจ /start ูู ุฑุณุงูุฉ ุฌุฏูุฏุฉ")
                        except Exception as e:
                            send_direct_message(client, user_id,
                                "โ ุชุนุฐุฑ ุฅุฎูุงุก ุงููุญุงุฏุซุฉ")
                
                except Exception as e:
                    logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุฑุณุงูุฉ: {e}")
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุฑุณุงุฆู: {e}")

def send_scheduled_adhkar(client):
    """ุฅุฑุณุงู ุงูุฃุฐูุงุฑ ุญุณุจ ุงูุชูููุช"""
    current_hour = get_algeria_time()
    adhkar = None
    time_type = ""
    
    if 6 <= current_hour < 9:
        adhkar = MORNING_ADHKAR
        time_type = "ุงูุตุจุงุญ ๐"
    elif 18 <= current_hour < 21:
        adhkar = EVENING_ADHKAR
        time_type = "ุงููุณุงุก ๐"
    elif 21 <= current_hour < 23:
        adhkar = NIGHT_ADHKAR
        time_type = "ุงูููู ๐"
    
    if adhkar and active_users:
        for user_id in active_users:
            zikr = random.choice(adhkar)
            send_direct_message(client, user_id,
                f"๐ ุฐูุฑ {time_type}:\n\n{zikr}\n\n"
                f"ุงูููุช: {datetime.now().strftime('%H:%M')} (ุชูููุช ุงูุฌุฒุงุฆุฑ)")
            time.sleep(10)  # ุชุฃุฎูุฑ ุจูู ุงูุฅุฑุณุงู

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    client = Client()
    client.delay_range = [2, 5]  # ุชูููู ุณุฑุนุฉ ุงูุฅุฌุฑุงุกุงุช
    
    # ุชุณุฌูู ุงูุฏุฎูู
    try:
        client.login(BOT_USERNAME, BOT_PASSWORD)
        logging.info("โ ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ")
    except Exception as e:
        logging.error(f"โ ูุดู ุชุณุฌูู ุงูุฏุฎูู: {e}")
        return
    
    # ูุนูููุงุช ุงูุญุณุงุจ
    try:
        bot_user_id = client.user_id
        logging.info(f"๐น ุงูุจูุช ูุนูู ุจุงุณู: @{client.username}")
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุฌูุจ ูุนูููุงุช ุงูุจูุช: {e}")
        return
    
    # ุงูุฏูุฑุฉ ุงูุฑุฆูุณูุฉ
    while True:
        try:
            logging.info("๐ ุฌุงุฑู ูุญุต ุงูุฃูุดุทุฉ...")
            
            # 1. ุงููุชุงุจุนูู ุงูุฌุฏุฏ
            try:
                followers = client.user_followers(bot_user_id, amount=15)
                for user_id, user_info in followers.items():
                    if user_id not in [u["user_id"] for u in follow_requests]:
                        handle_new_follower(client, user_id, user_info.username)
            except Exception as e:
                logging.error(f"ุฎุทุฃ ูู ูุญุต ุงููุชุงุจุนูู: {e}")
            
            # 2. ูุนุงูุฌุฉ ุงูุฑุณุงุฆู
            process_new_messages(client)
            
            # 3. ุฅุฑุณุงู ุงูุฃุฐูุงุฑ
            send_scheduled_adhkar(client)
            
            time.sleep(180)  # ูู 3 ุฏูุงุฆู
            
        except KeyboardInterrupt:
            logging.info("โน๏ธ ุฅููุงู ุงูุจูุช...")
            break
        except Exception as e:
            logging.error(f"๐ฅ ุฎุทุฃ ุบูุฑ ูุชููุน: {e}")
            time.sleep(60)

if __name__ == "__main__":
    logging.info("๐ ุจุฏุก ุชุดุบูู ุจูุช ุงูุฃุฐูุงุฑ...")
    main()
